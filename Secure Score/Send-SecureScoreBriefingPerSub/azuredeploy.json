{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata":{
        "comments": "This Secure Score Logic App will send a weekly Security Score briefing per each subscription to the Compliance and Security teams and Subscription Owners and Contributors to help track progress on Secure Score for each Subscription.",
        "author": "Nathan Swift"
    },
    "parameters": {
        "PlaybookName": {
            "defaultValue": "Send-SecureScoreBriefingPerSub",
            "type": "String"
        },
        "UserName": {
            "defaultValue": "<username>@<domain>",
            "type": "string"
        },
        "SendEmailTo": {
            "defaultValue": "<sendtoemail>@<domain>",
            "type": "string"
        },
        "SecureScoreLogAnalyticsSubId": {
            "defaultValue": "YourLogAnalyticsWorkspaceCollectingSecureScore-SubscriptionID",
            "type": "string"
        },
        "SecureScoreLogAnalyticsRGName": {
            "defaultValue": "YourLogAnalyticsWorkspaceCollectingSecureScore-ResourceGroupName",
            "type": "string"
        },
        "SecureScoreLogAnalyticsName": {
            "defaultValue": "YourLogAnalyticsWorkspaceCollectingSecureScore-WorkspaceName",
            "type": "string"
        }
    },
    "variables": {
        "azuremonitorlogsConnectionName": "[concat('azuremonitorlogs-', parameters('PlaybookName'))]",
        "Office365ConnectionName": "[concat('office365-', parameters('PlaybookName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('Office365ConnectionName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "displayName": "[parameters('UserName')]",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/office365')]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('azuremonitorlogsConnectionName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "displayName": "[parameters('UserName')]",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuremonitorlogs')]"
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('PlaybookName')]",
            "location": "[resourceGroup().location]",
            "tags": {
                "LogicAppsCategory": "security"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', variables('azuremonitorlogsConnectionName'))]",
                "[resourceId('Microsoft.Web/connections', variables('Office365ConnectionName'))]"
            ],
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        },
                        "SecureScoreLogAnalyticsName": {
                            "defaultValue": "[parameters('SecureScoreLogAnalyticsName')]",
                            "type": "String"
                        },
                        "SecureScoreLogAnalyticsRGName": {
                            "defaultValue": "[parameters('SecureScoreLogAnalyticsRGName')]",
                            "type": "String"
                        },
                        "SecureScoreLogAnalyticsSubId": {
                            "defaultValue": "[parameters('SecureScoreLogAnalyticsSubId')]",
                            "type": "String"
                        },
                        "ComplianceEmailAddress": {
                            "defaultValue": "[parameters('SendEmailTo')]",
                            "type": "String"
                        }
                    },
                    "triggers": {
                        "Recurrence": {
                            "recurrence": {
                                "frequency": "Week",
                                "interval": 1,
                                "schedule": {
                                    "hours": [
                                        "9"
                                    ],
                                    "weekDays": [
                                        "Monday"
                                    ]
                                }
                            },
                            "type": "Recurrence"
                        }
                    },
                    "actions": {
                        "CurrentDate": {
                            "runAfter": {
                                "Initialize_Timechart": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Expression",
                            "kind": "CurrentTime",
                            "inputs": {}
                        },
                        "CurrentDateFormat": {
                            "runAfter": {
                                "PastWeekDate": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Expression",
                            "kind": "ConvertTimeZone",
                            "inputs": {
                                "baseTime": "@body('CurrentDate')",
                                "destinationTimeZone": "UTC",
                                "formatString": "d",
                                "sourceTimeZone": "UTC"
                            }
                        },
                        "DiscoverSubscriptions": {
                            "runAfter": {
                                "PastDateFormat": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": "SecureScore_CL\n| extend SubscriptionId = strcat(split(id_s, '/')[2])\n| join kind = leftouter (Subscriptions_CL) \non $left.SubscriptionId == $right.SubscriptionId\n| extend Subscription = displayName_s\n| distinct SubscriptionId, Subscription",
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuremonitorlogs']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/queryData",
                                "queries": {
                                    "resourcegroups": "@parameters('SecureScoreLogAnalyticsRGName')",
                                    "resourcename": "@parameters('SecureScoreLogAnalyticsName')",
                                    "resourcetype": "Log Analytics Workspace",
                                    "subscriptions": "@parameters('SecureScoreLogAnalyticsSubId')",
                                    "timerange": "Last 7 days"
                                }
                            }
                        },
                        "For_each": {
                            "foreach": "@body('DiscoverSubscriptions')?['value']",
                            "actions": {
                                "FilterNullEmails": {
                                    "runAfter": {
                                        "GetEmails": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Query",
                                    "inputs": {
                                        "from": "@body('GetEmails')?['value']",
                                        "where": "@or(not(equals(item()?['mail'], null)), not(equals(item()?['otherMails'], null)))"
                                    }
                                },
                                "FilterOwnerContributor": {
                                    "runAfter": {
                                        "GetRoleAssigns": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Query",
                                    "inputs": {
                                        "from": "@body('GetRoleAssigns')?['value']",
                                        "where": "@or(contains(item()?['properties']?['roleDefinitionId'], '8e3af657-a8ff-443c-a75c-2fe8c4bcb635'), contains(item()?['properties']?['roleDefinitionId'], 'b24988ac-6180-42a0-ab88-20f7382dd24c'))"
                                    }
                                },
                                "For_each_2": {
                                    "foreach": "@body('FilterOwnerContributor')",
                                    "actions": {
                                        "Append_to_simpleassignarray": {
                                            "runAfter": {},
                                            "type": "AppendToArrayVariable",
                                            "inputs": {
                                                "name": "simpleassignarray",
                                                "value": "@items('For_each_2')?['properties']?['principalId']"
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "FilterOwnerContributor": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Foreach"
                                },
                                "For_each_3": {
                                    "foreach": "@body('FilterNullEmails')",
                                    "actions": {
                                        "Condition": {
                                            "actions": {
                                                "AppendMailEmailString": {
                                                    "runAfter": {},
                                                    "type": "AppendToStringVariable",
                                                    "inputs": {
                                                        "name": "emailstring",
                                                        "value": "@items('For_each_3')?['mail']"
                                                    }
                                                }
                                            },
                                            "runAfter": {},
                                            "else": {
                                                "actions": {
                                                    "For_each_4": {
                                                        "foreach": "@items('For_each_3')?['otherMails']",
                                                        "actions": {
                                                            "Condition_2": {
                                                                "actions": {
                                                                    "AppendOtherMailEmailString": {
                                                                        "runAfter": {},
                                                                        "type": "AppendToStringVariable",
                                                                        "inputs": {
                                                                            "name": "emailstring",
                                                                            "value": "@{items('For_each_4')};"
                                                                        }
                                                                    }
                                                                },
                                                                "runAfter": {},
                                                                "expression": {
                                                                    "and": [
                                                                        {
                                                                            "not": {
                                                                                "equals": [
                                                                                    "@items('For_each_4')",
                                                                                    "@null"
                                                                                ]
                                                                            }
                                                                        }
                                                                    ]
                                                                },
                                                                "type": "If"
                                                            }
                                                        },
                                                        "runAfter": {},
                                                        "type": "Foreach"
                                                    }
                                                }
                                            },
                                            "expression": {
                                                "and": [
                                                    {
                                                        "not": {
                                                            "equals": [
                                                                "@items('For_each_3')?['mail']",
                                                                "@null"
                                                            ]
                                                        }
                                                    }
                                                ]
                                            },
                                            "type": "If"
                                        }
                                    },
                                    "runAfter": {
                                        "FilterNullEmails": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Foreach"
                                },
                                "GetEmails": {
                                    "runAfter": {
                                        "For_each_2": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Http",
                                    "inputs": {
                                        "authentication": {
                                            "audience": "https://graph.microsoft.com",
                                            "type": "ManagedServiceIdentity"
                                        },
                                        "body": {
                                            "ids": "@variables('simpleassignarray')",
                                            "types": [
                                                "user"
                                            ]
                                        },
                                        "method": "POST",
                                        "uri": "https://graph.microsoft.com/v1.0/directoryObjects/getByIds"
                                    }
                                },
                                "GetRoleAssigns": {
                                    "runAfter": {},
                                    "type": "Http",
                                    "inputs": {
                                        "authentication": {
                                            "audience": "https://management.azure.com/",
                                            "type": "ManagedServiceIdentity"
                                        },
                                        "method": "GET",
                                        "uri": "https://management.azure.com/subscriptions/@{items('For_each')?['SubscriptionId']}/providers/Microsoft.Authorization/roleAssignments?api-version=2015-07-01"
                                    }
                                },
                                "SecureScoreRankingsViz": {
                                    "runAfter": {
                                        "Set_variable": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": "SecureScoreControls_CL\n| where SubscriptionId contains \"@{items('For_each')?['SubscriptionId']}\"\n| extend SubscriptionId = tostring(split(id_s, \"/\", 2)[0]), SecurityControl = properties_displayName_s\n| where properties_score_max_d != 0\n| join kind = leftouter (Subscriptions_CL) \non $left.SubscriptionId == $right.SubscriptionId\n| summarize by Subscription = displayName_s, ScorePercent = round((round(properties_score_current_d, 0)*100)/properties_score_max_d, 0), SecurityControl\n| where ScorePercent != 100\n| sort by Subscription asc , ScorePercent desc",
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azuremonitorlogs']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/visualizeQuery",
                                        "queries": {
                                            "resourcegroups": "@parameters('SecureScoreLogAnalyticsRGName')",
                                            "resourcename": "@parameters('SecureScoreLogAnalyticsName')",
                                            "resourcetype": "Log Analytics Workspace",
                                            "subscriptions": "@parameters('SecureScoreLogAnalyticsSubId')",
                                            "timerange": "Last 24 hours",
                                            "visType": "Html Table"
                                        }
                                    }
                                },
                                "SecureScoreViz": {
                                    "runAfter": {
                                        "For_each_3": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": "SecureScore_CL\n| where SubscriptionId contains \"@{items('For_each')?['SubscriptionId']}\"\n| extend ScorePrecent = round((round(properties_score_current_d, 0)*100)/properties_score_max_d, 0), SubscriptionId = strcat(split(id_s, '/')[2])\n| join kind = leftouter (Subscriptions_CL) \non $left.SubscriptionId == $right.SubscriptionId\n| summarize by TimeGenerated, ScorePrecent, Subscription = displayName_s",
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azuremonitorlogs']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/visualizeQuery",
                                        "queries": {
                                            "resourcegroups": "@parameters('SecureScoreLogAnalyticsRGName')",
                                            "resourcename": "@parameters('SecureScoreLogAnalyticsName')",
                                            "resourcetype": "Log Analytics Workspace",
                                            "subscriptions": "@parameters('SecureScoreLogAnalyticsSubId')",
                                            "timerange": "Last 7 days",
                                            "visType": "Time Chart"
                                        }
                                    }
                                },
                                "Send_an_email_(V2)_2": {
                                    "runAfter": {
                                        "SecureScoreRankingsViz": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "Attachments": [
                                                {
                                                    "ContentBytes": "@{body('SecureScoreViz')?['attachmentContent']}",
                                                    "Name": "@body('SecureScoreViz')?['attachmentName']"
                                                }
                                            ],
                                            "Body": "<p><span style=\"font-size: 30px\"></span><span style=\"font-size: 30px\">@{items('For_each')?['Subscription']}</span><span style=\"font-size: 30px\">Security Score weekly briefing<br>\n</span><br>\n<span style=\"font-size: 14px\">Daily trending secure score by subscription - Are you trending down ? </span><a href=\"https://portal.azure.com/#blade/Microsoft_Azure_Security/SecurityMenuBlade/23\"><span style=\"font-size: 14px\">Review unhealthy Security Control details</span><br>\n<br>\n</a><span style=\"font-size: 10px\">Remediate unhealthy resources under Security Controls<br>\n</span><a href=\"https://azsk.azurewebsites.net/\"><span style=\"font-size: 10px\">Implement SecureDevOps Kit for Azure</span></a><span style=\"font-size: 10px\"> , design and deploy securely</span><br>\n<br>\n@{variables('img')}<br>\n<br>\n<span style=\"font-size: 14px\">UnHealthy SecurityControl Rankings</span><br>\n@{base64ToString(body('SecureScoreRankingsViz')?['attachmentContent'])}</p>",
                                            "Importance": "High",
                                            "Subject": "@{items('For_each')?['Subscription']} | Security Score weekly briefing |  @{body('PastDateFormat')} - @{body('CurrentDateFormat')}",
                                            "To": "@{parameters('ComplianceEmailAddress')}; @{variables('emailstring')}"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['office365']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/v2/Mail"
                                    }
                                },
                                "Set_variable": {
                                    "runAfter": {
                                        "SecureScoreViz": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "SetVariable",
                                    "inputs": {
                                        "name": "img",
                                        "value": "<img src=\"cid:@{body('SecureScoreViz')?['attachmentName']}\"/>"
                                    }
                                }
                            },
                            "runAfter": {
                                "DiscoverSubscriptions": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "Initialize_Timechart": {
                            "runAfter": {
                                "Initialize_emailstring": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "img",
                                        "type": "string",
                                        "value": "@{null}"
                                    }
                                ]
                            }
                        },
                        "Initialize_emailstring": {
                            "runAfter": {
                                "Initialize_simpleassignarray": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "emailstring",
                                        "type": "string",
                                        "value": "@{null}"
                                    }
                                ]
                            }
                        },
                        "Initialize_simpleassignarray": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "simpleassignarray",
                                        "type": "array",
                                        "value": []
                                    }
                                ]
                            }
                        },
                        "PastDateFormat": {
                            "runAfter": {
                                "CurrentDateFormat": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Expression",
                            "kind": "ConvertTimeZone",
                            "inputs": {
                                "baseTime": "@body('PastWeekDate')",
                                "destinationTimeZone": "UTC",
                                "formatString": "d",
                                "sourceTimeZone": "UTC"
                            }
                        },
                        "PastWeekDate": {
                            "runAfter": {
                                "CurrentDate": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Expression",
                            "kind": "SubtractFromTime",
                            "inputs": {
                                "baseTime": "@body('CurrentDate')",
                                "interval": 1,
                                "timeUnit": "Week"
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azuremonitorlogs": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('azuremonitorlogsConnectionName'))]",
                                "connectionName": "[variables('azuremonitorlogsConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuremonitorlogs')]"
                            },
                            "office365": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('Office365ConnectionName'))]",
                                "connectionName": "[variables('Office365ConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/office365')]"
                            }
                        }
                    }
                }
            }
        }
    ]
}