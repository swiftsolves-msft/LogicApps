{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
        "metadata":{
        "comments": "This Logic App will trigger from a KQL Alert from AzureActivity Table read the resource and check if a Tag createdby or a tag you define at deployment is present, if that tag is not present it will add the Caller who /write to the Azure Resource as a new tag. If that tag is present then it will not update the tag.",
        "author": "Nathan Swift"
    },    
    "parameters": {
        "LogicAppName": {
            "defaultValue": "Set-ResourceTag",
            "type": "String"
        },
        "Tag": {
            "defaultValue": "createdby",
            "type": "string"
        }
    },
    "variables": {
        "armConnectionName": "[concat('arm-', parameters('LogicAppName'))]"        
    },
    "resources": [
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('armConnectionName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "displayName": "setresourcetag-la-msi",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/arm')]"
                },
                "parameterValueType": "Alternative"
            }
        },        
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('LogicAppName')]",
            "location": "[resourceGroup().location]",
            "tags": {
                "LogicAppsCategory": "security"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', variables('armConnectionName'))]"
            ],
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        },
                        "Tag": {
                            "defaultValue": "[parameters('Tag')]",
                            "type": "String"
                        }
                    },
                    "triggers": {
                        "manual": {
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {},
                            "description": "should be wired into KQL Alert using AzureActivity tables. /write"
                        }
                    },
                    "actions": {
                        "Condition": {
                            "actions": {
                                "UpdateTag": {
                                    "runAfter": {},
                                    "type": "Http",
                                    "inputs": {
                                        "authentication": {
                                            "audience": "https://management.azure.com",
                                            "type": "ManagedServiceIdentity"
                                        },
                                        "body": {
                                            "operation": "Merge",
                                            "properties": {
                                                "tags": {
                                                    "@{parameters('Tag')}": "@{variables('caller')}"
                                                }
                                            }
                                        },
                                        "headers": {
                                            "Content-Type": "application/json"
                                        },
                                        "method": "PATCH",
                                        "uri": "https://management.azure.com/@{body('Read_a_resource')?['id']}/providers/Microsoft.Resources/tags/default?api-version=2020-10-01"
                                    },
                                    "description": "insert a new tag createdby or other tag name defined at deployment. This will then add the value of the caller in the activity alerts into the tag"
                                }
                            },
                            "runAfter": {
                                "Read_a_resource": [
                                    "Succeeded"
                                ]
                            },
                            "expression": {
                                "or": [
                                    {
                                        "not": {
                                            "contains": [
                                                "@body('Read_a_resource')",
                                                "tags"
                                            ]
                                        }
                                    },
                                    {
                                        "not": {
                                            "contains": [
                                                "@body('Read_a_resource')?['tags']",
                                                "@parameters('Tag')"
                                            ]
                                        }
                                    }
                                ]
                            },
                            "type": "If",
                            "description": "If the tags do not contain a createdby or other tag defined at deployment then add a tag with the caller that created the resource. If tag is present then skip updating."
                        },
                        "Initialize_variable_apiversion": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "apiversion",
                                        "type": "string",
                                        "value": "2015-06-15"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_caller": {
                            "runAfter": {
                                "Initialize_variable_shortresource": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "caller",
                                        "type": "string",
                                        "value": "@{triggerBody()?['data']?['SearchResult']?['tables'][0]?['rows'][0][5]}"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_resourcegroup": {
                            "runAfter": {
                                "Initialize_variable_subscription": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "resourcegroup",
                                        "type": "string",
                                        "value": "@{triggerBody()?['data']?['SearchResult']?['tables'][0]?['rows'][0][1]}"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_resourceid": {
                            "runAfter": {
                                "Initialize_variable_apiversion": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "resourceid",
                                        "type": "string",
                                        "value": "@{triggerBody()?['data']?['SearchResult']?['tables'][0]?['rows'][0][4]}"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_resourceprovider": {
                            "runAfter": {
                                "Initialize_variable_resourcegroup": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "resourceprovider",
                                        "type": "string",
                                        "value": "@{triggerBody()?['data']?['SearchResult']?['tables'][0]?['rows'][0][2]}"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_shortresource": {
                            "runAfter": {
                                "Initialize_variable_resourceprovider": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "shortresource",
                                        "type": "string",
                                        "value": "@{triggerBody()?['data']?['SearchResult']?['tables'][0]?['rows'][0][3]}"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_subscription": {
                            "runAfter": {
                                "Initialize_variable_resourceid": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "subscription",
                                        "type": "string",
                                        "value": "@{triggerBody()?['data']?['SearchResult']?['tables'][0]?['rows'][0][0]}"
                                    }
                                ]
                            }
                        },
                        "Read_a_resource": {
                            "runAfter": {
                                "Switch": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['arm']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/subscriptions/@{encodeURIComponent(variables('subscription'))}/resourcegroups/@{encodeURIComponent(variables('resourcegroup'))}/providers/@{encodeURIComponent(variables('resourceprovider'))}/@{encodeURIComponent(variables('shortresource'))}",
                                "queries": {
                                    "x-ms-api-version": "@variables('apiversion')"
                                }
                            },
                            "description": "read the azure resource to lookup the tags"
                        },
                        "Switch": {
                            "runAfter": {
                                "Initialize_variable_caller": [
                                    "Succeeded"
                                ]
                            },
                            "cases": {
                                "Case": {
                                    "case": "MICROSOFT.LOGIC",
                                    "actions": {
                                        "Set_variable": {
                                            "runAfter": {},
                                            "type": "SetVariable",
                                            "inputs": {
                                                "name": "apiversion",
                                                "value": "2019-05-01"
                                            },
                                            "description": "microsoft.logic provider type needs a different api version when looking up the Logic App resource to see it's tags."
                                        }
                                    }
                                }
                            },
                            "default": {
                                "actions": {}
                            },
                            "expression": "@variables('resourceprovider')",
                            "type": "Switch",
                            "description": "the default api is set in an earlier variable however some get resources require a different api version. you may need to add more switches on the provider type and a applicable api version for certain Azure resource to look up the resource the tags"
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "arm": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('armConnectionName'))]",
                                "connectionName": "arm",
                                "connectionProperties": {
                                    "authentication": {
                                        "type": "ManagedServiceIdentity"
                                    }
                                },
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/arm')]"
                            }
                        }
                    }
                }
            }
        }
    ]
}